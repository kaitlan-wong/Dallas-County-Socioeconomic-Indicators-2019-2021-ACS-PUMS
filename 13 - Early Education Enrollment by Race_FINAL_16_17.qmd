---
title: "DEI ACS PUMS Data Checks - Indicator 13: Early Education Enrollment by Race - 2019 report replication - 2016-2017"
author: "Kaitlan Wong"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus) 
library(tidyverse) 
library(readxl) 
library(writexl) 
library(dplyr)
```

#### See <https://walker-data.com/census-r/analyzing-census-microdata.html> for guidance on using tidycensus to get ACS PUMS

#### ACS PUMS Data Documentation: <https://www.census.gov/programs-surveys/acs/microdata/documentation.html>

Get 2017 ACS PUMS data.

```{r}
# Get ACS data
pums17 <- get_pums(
  variables = c("AGEP", "RAC1P", "HISP", "PUMA", "SCH", "SCHG", "POVPIP"),
  state = "TX",
  survey = "acs1",
  year = 2017,
  recode = TRUE,
)

# View data
head(pums17)
```

Filter for Dallas PUMAs and mutate variables

```{r}
# Filter for Dallas PUMAs
data17 <- pums17 %>%
  filter(PUMA %in% c("02304", "02305", "02306", "02307", "02309", "02310", "02311", "02312", "02313", "02314", "02315", "02316", "02319", "01901", "02001"),
         # filter for 3 and 4 year-olds
         AGEP == 3 | AGEP == 4) %>%
  # recode race/ethnicity
  mutate(race_eth = case_when(
    HISP != "01" ~ "Hispanic",
    HISP == "01" & RAC1P == "1" ~ "White, non-Hispanic",
    HISP == "01" & RAC1P == "2" ~ "Black, non-Hispanic",
    HISP == "01" & RAC1P %in% c("3","4","5") ~ "AIAN, non-Hispanic",
    HISP == "01" & RAC1P %in% c("6","7") ~ "Asian or Pacific Islander, non-Hispanic",
    HISP == "01" & RAC1P %in% c("8","9") ~ "Other, non-Hispanic",
    TRUE ~ NA_character_)
  ) %>%
  mutate(preK = case_when(
    SCHG == "01" ~ "Attends preK", # using SCHG instead of SCH, just as 2019 method
    TRUE ~ "Not in preK")
   )
```

Create table of counts and %s using person weight variable.

```{r}
# Calculate # and % in preK by race/ethnicity
summary17 <- data17 %>%
  group_by(race_eth) %>%
  summarize(
    count = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE),
    prop = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE) / sum(PWGTP)
  )

summary17


# Calculate total # and % in preK
summary_all17 <- data17 %>%
  summarize(
    count = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE),
    prop = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE) / sum(PWGTP)
  )

summary_all17
```

Repeat steps for 2016 data.

```{r}
# Get ACS data
pums16 <- get_pums(
  variables = c("AGEP", "RAC1P", "HISP", "PUMA", "SCH", "SCHG", "POVPIP"),
  state = "TX",
  survey = "acs1",
  year = 2016,
  recode = TRUE,
)

# View data
head(pums16)
```

```{r}
# Filter for Dallas PUMAs
data16 <- pums16 %>%
 filter(PUMA %in% c("2304", "2305", "2306", "2307", "2309", "2310", "2311", "2312", "2313", "2314", "2315", "2316", "2319", "1901", "2001"),
         # filter for 3 and 4 year-olds
         AGEP == 3 | AGEP == 4) %>%
  # recode race/ethnicity
  mutate(race_eth = case_when(
    HISP != "01" ~ "Hispanic",
    HISP == "01" & RAC1P == "1" ~ "White, non-Hispanic",
    HISP == "01" & RAC1P == "2" ~ "Black, non-Hispanic",
    HISP == "01" & RAC1P %in% c("3","4","5") ~ "AIAN, non-Hispanic",
    HISP == "01" & RAC1P %in% c("6","7") ~ "Asian or Pacific Islander, non-Hispanic",
    HISP == "01" & RAC1P %in% c("8","9") ~ "Other, non-Hispanic",
    TRUE ~ NA_character_)
  ) %>%
  mutate(preK = case_when(
    SCHG == "01" ~ "Attends preK", # using SCHG instead of SCH, just as 2019 method
    TRUE ~ "Not in preK")
   )


# Calculate # and % in preK by race/ethnicity
summary16 <- data16 %>%
  group_by(race_eth) %>%
  summarize(
    count = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE),
    prop = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE) / sum(PWGTP)
  )

summary16


# Calculate total # and % in preK
summary_all16 <- data16 %>%
  summarize(
    count = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE),
    prop = sum(PWGTP[preK == "Attends preK"], na.rm = TRUE) / sum(PWGTP)
  )

summary_all16

# for some reason not getting correct output for 2016. For time purposes, will not investigate further since I was able to replicate 2017 report data. Likely due to change in code book.
```

```{r}
# Export tables to Excel

write_xlsx(list("2017" = summary17, "2016" = summary16), "13_Early Education Enrollment by Race_FINAL_16_17.xlsx")
```
